{"version":3,"sources":["panels/Home.js","panels/Persik.js","panels/down.js","App.js","index.js","img/persik.png"],"names":["Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","osName","platform","Persik","props","left","IOS","className","persik","alt","queryString","require","console","log","window","location","search","parsed","parse","JSON","stringify","Apploader","checkMimeType","event","files","target","err","types","x","length","every","type","z","toast","error","value","maxSelectFile","warn","checkFileSize","onChangeHandler","setState","selectedFile","loaded","onClickHandler","data","FormData","state","append","axios","post","onUploadProgress","ProgressEvent","total","headers","then","res","success","catch","this","multiple","onChange","Progress","max","color","Math","round","Component","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","connect","sendPromise","user","subscribe","detail","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","send","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.221caf85.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\n\r\n/*\r\n\r\nconst queryString = require('query-string');\r\nconsole.log(\"query\", window.location.search);\r\nconst parsed = queryString.parse(window.location.search);\r\nconsole.log(\"query\", JSON.stringify(parsed));\r\n\r\n\r\nconst http = require('http');\r\nhttp.post('http://localhost:5000/upload', (resp) => {\r\n  let data = parsed;\r\n\r\n*/\r\n\r\nconst Home = ({ id, go, fetchedUser }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>Example</PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group title=\"User Data Fetched with VK Connect\">\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\r\n\t\t</Group>}\r\n\r\n\t\t<Group title=\"Navigation Example\">\r\n\t\t\t<Div>\r\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\r\n\t\t\t\t\tShow me the Persik, please\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n\r\n\t\t<Group title={\"File uploader\"}>\r\n\t\t\t<Div>\r\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"down\">\r\n\t\t\t\t\tDownload file\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\r\n\t\t</Group>\r\n\r\n\r\n\t</Panel>\r\n);\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</HeaderButton>}\r\n\t\t>\r\n\t\t\tPersik\r\n\t\t</PanelHeader>\r\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\r\n\t</Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Progress} from 'reactstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\n\r\n\r\nconst osName = platform();\r\n/*\r\nconst Persik = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</HeaderButton>}\r\n\t\t>\r\n\t\t\tPersik\r\n\t\t</PanelHeader>\r\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\r\n\t</Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;*/\r\n\r\n\r\n\r\n\r\nconst queryString = require('query-string');\r\nconsole.log(\"query\", window.location.search);\r\nconst parsed = queryString.parse(window.location.search);\r\nconsole.log(\"query\", JSON.stringify(parsed));\r\n\r\n\r\nclass Apploader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n        selectedFile: null,\r\n        loaded:0\r\n      }\r\n\r\n  }\r\n  checkMimeType=(event)=>{\r\n    //getting file object\r\n    let files = event.target.files\r\n    //define message container\r\n    let err = []\r\n    // list allow mime type\r\n   const types = ['image/png', 'image/jpeg', 'image/gif']\r\n    // loop access array\r\n    for(var x = 0; x<files.length; x++) {\r\n     // compare file type find doesn't matach\r\n         if (types.every(type => files[x].type !== type)) {\r\n         // create error message and assign to container\r\n         err[x] = files[x].type+' is not a supported format\\n';\r\n       }\r\n     };\r\n     for(var z = 0; z<err.length; z++) {// if message not same old that mean has error\r\n         // discard selected file\r\n        toast.error(err[z])\r\n        event.target.value = null\r\n    }\r\n   return true;\r\n  }\r\n  maxSelectFile=(event)=>{\r\n    let files = event.target.files\r\n        if (files.length > 3) {\r\n           const msg = 'Only 3 images can be uploaded at a time'\r\n           event.target.value = null\r\n           toast.warn(msg)\r\n           return false;\r\n      }\r\n    return true;\r\n }\r\n checkFileSize=(event)=>{\r\n  let files = event.target.files\r\n  let size = 200000000000\r\n  let err = [];\r\n  for(var x = 0; x<files.length; x++) {\r\n  if (files[x].size > size) {\r\n   err[x] = files[x].type+'is too large, please pick a smaller file\\n';\r\n }\r\n};\r\nfor(var z = 0; z<err.length; z++) {// if message not same old that mean has error\r\n  // discard selected file\r\n toast.error(err[z])\r\n event.target.value = null\r\n}\r\nreturn true;\r\n}\r\nonChangeHandler=event=>{\r\n  var files = event.target.files\r\n  if(this.maxSelectFile(event) && this.checkMimeType(event) &&    this.checkFileSize(event)){\r\n  // if return true allow to setState\r\n     this.setState({\r\n     selectedFile: files,\r\n     loaded:0\r\n  })\r\n}\r\n}\r\n  onClickHandler = () => {\r\n    const data = new FormData()\r\n    for(var x = 0; x<this.state.selectedFile.length; x++) {\r\n      data.append('file', this.state.selectedFile[x])\r\n    }\r\n    axios.post(\"http://localhost:5000/upload\", data, {\r\n\r\n      onUploadProgress: ProgressEvent => {\r\n        this.setState({\r\n          loaded: (ProgressEvent.loaded / ProgressEvent.total*100),\r\n        })\r\n      }, headers: {'vkheaders': JSON.stringify(parsed) }\r\n    })\r\n      .then(res => { // then print response status\r\n        toast.success('upload success')\r\n      })\r\n      .catch(err => { // then print response status\r\n        toast.error('upload fail')\r\n      })\r\n    }\r\n\r\n  render() {\r\n      return (\r\n\r\n\r\n          <Panel id={this.props.id}>\r\n              <PanelHeader\r\n                  left={<HeaderButton onClick={this.props.go} data-to=\"home\">\r\n                      {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n                  </HeaderButton>}\r\n              >\r\n\r\n              </PanelHeader>\r\n\r\n\r\n              <div className=\"container\">\r\n                      <div className=\"row\">\r\n                          <div className=\"offset-md-3 col-md-6\">\r\n                              <div className=\"form-group files\">\r\n                                  <label>Upload Your File </label>\r\n                                  <input type=\"file\" className=\"form-control\" multiple onChange={this.onChangeHandler}/>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                  <ToastContainer/>\r\n                                  <Progress max=\"100\" color=\"success\"\r\n                                            value={this.state.loaded}>{Math.round(this.state.loaded, 2)}%</Progress>\r\n\r\n                              </div>\r\n\r\n                              <button type=\"button\" className=\"btn btn-success btn-block\"\r\n                                      onClick={this.onClickHandler}>Upload\r\n                              </button>\r\n\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n\r\n          </Panel>\r\n      );\r\n  }\r\n}\r\nexport default Apploader;\r\n","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Home from './panels/Home';\r\nimport Persik from './panels/Persik';\r\nimport Down from './panels/down'\r\n\r\n/*\r\nconst queryString = require('query-string');\r\nconst parsed = queryString.parse(window.location.search);\r\n\r\n\r\nconst http = require('http');\r\nhttp.post('http://localhost:/upload', data = parsed => {\r\n\tlet data = parsed;\r\n});\r\n*/\r\n\r\nconst App = () => {\r\n\r\n\tconst [activePanel, setActivePanel] = useState('home');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\tuseEffect(() => {\r\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View activePanel={activePanel} popout={popout}>\r\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\r\n\t\t\t<Persik id='persik' go={go} />\r\n\t\t\t<Down id = 'down' go = {go} />\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n","import 'core-js/features/map';\r\nimport 'core-js/features/set';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport App from './App';\r\n// import registerServiceWorker from './sw';\r\n\r\n// Init VK  Mini App\r\nconnect.send('VKWebAppInit');\r\n\r\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\r\n// расскомментируйте строку с registerServiceWorker();\r\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\r\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\r\n// registerServiceWorker();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}